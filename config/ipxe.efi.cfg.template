#!ipxe

# EVE-OS Standard Boot Flow (matches official installer)
# Chain to GRUB which handles ISO mounting and complex boot logic

# Basic network setup (matches official ipxe.efi.cfg)
# dhcp   # Commented in official version

# Standard EVE-OS console setup (from official ipxe.efi.cfg)
set console console=ttyS0 console=ttyS1 console=ttyS2 console=ttyAMA0 console=ttyAMA1 console=tty0
set eve_args eve_soft_serial=${mac:hexhyp} eve_reboot_after_install getty
set installer_args root=/initrd.image find_boot=netboot overlaytmpfs fastboot

# Standard vendor-specific tweaks (from official ipxe.efi.cfg) 
iseq ${smbios/manufacturer} Huawei && set console console=ttyAMA0,115200n8 ||
iseq ${smbios/manufacturer} Huawei && set platform_tweaks pcie_aspm=off pci=pcie_bus_perf ||
iseq ${smbios/manufacturer} Supermicro && set console console=ttyS1,115200n8 ||
iseq ${smbios/manufacturer} QEMU && set console console=hvc0 console=ttyS0 ||

# Set the base URL for this version
set url http://{{SERVER_IP}}/{{VERSION}}/

# Chain to GRUB (standard EVE-OS flow) - GRUB handles ISO loop mounting
echo Chaining to EVE-OS GRUB bootloader...
iseq ${buildarch} x86_64 && chain ${url}EFI/BOOT/BOOTX64.EFI ||
iseq ${buildarch} arm64 && chain ${url}EFI/BOOT/BOOTAA64.EFI ||
iseq ${buildarch} riscv64 && chain ${url}EFI/BOOT/BOOTRISCV64.EFI ||
goto arch_error

:arch_error
echo Error: Unsupported architecture ${buildarch}
echo Supported architectures: x86_64, arm64, riscv64
prompt Press any key to retry...
goto start

:start
echo Retrying from start...
goto arch_error

boot
goto retry_net

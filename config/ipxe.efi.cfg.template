#!ipxe

# EVE-OS Standard Boot Flow with Custom GRUB Config
# iPXE chains to GRUB, which uses our custom config to mount installer.iso via HTTP

echo Loading EVE-OS {{VERSION}} installer...

# Standard EVE-OS console setup (from official ipxe.efi.cfg)
set console console=ttyS0 console=ttyS1 console=ttyS2 console=ttyAMA0 console=ttyAMA1 console=tty0
set eve_args eve_soft_serial=${mac:hexhyp} eve_reboot_after_install getty
set installer_args root=/initrd.image find_boot=netboot overlaytmpfs fastboot

# Vendor-specific tweaks (from official ipxe.efi.cfg) 
iseq ${smbios/manufacturer} Huawei && set console console=ttyAMA0,115200n8 ||
iseq ${smbios/manufacturer} Huawei && set platform_tweaks pcie_aspm=off pci=pcie_bus_perf ||
iseq ${smbios/manufacturer} Supermicro && set console console=ttyS1,115200n8 ||
iseq ${smbios/manufacturer} QEMU && set console console=hvc0 console=ttyS0 ||

# Set the base URL for this version
set url http://{{SERVER_IP}}/{{VERSION}}/

echo Architecture: ${buildarch}
echo Platform: ${platform}  
echo Manufacturer: ${smbios/manufacturer}
echo Server: {{SERVER_IP}}
echo Version: {{VERSION}}

# Chain to GRUB - our custom grub.cfg will handle ISO mounting
echo Chaining to GRUB with custom configuration...
iseq ${buildarch} x86_64 && chain ${url}EFI/BOOT/BOOTX64.EFI || goto arch_error

:arch_error
echo Error: Unsupported architecture ${buildarch}
echo Supported architectures: x86_64
echo 
echo Expected to find GRUB bootloader at:
echo   ${url}EFI/BOOT/BOOTX64.EFI
echo 
echo Troubleshooting:
echo   1. Check if HTTP server is running
echo   2. Verify BOOTX64.EFI exists and is accessible
echo   3. Test URL manually
prompt Press any key to retry...
dhcp || goto arch_error
goto arch_error

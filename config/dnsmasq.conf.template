# Base Configuration
port=0
interface={{LISTEN_INTERFACE}}
bind-interfaces
log-dhcp

# TFTP configuration
enable-tftp
tftp-root=/tftpboot

# Client detection
dhcp-match=set:ipxe,175                   # iPXE ROM
dhcp-match=set:efi64,option:client-arch,7  # EFI x64
dhcp-match=set:efi64,option:client-arch,9  # EFI x64
dhcp-match=set:ipxe-ok,option:user-class,iPXE

# DHCP Configuration (mode-specific) - CRITICAL for proxy mode
{{DHCP_CONFIG}}

# Force TFTP server - CRITICAL for GRUB to use correct server
dhcp-option=option:tftp-server,{{SERVER_IP}}

# Server options - Force our server for all PXE-related options
# Option 66: TFTP server (used by GRUB for cmddevice)
dhcp-option=66,{{SERVER_IP}}
# Avoid packing boot filename into vendor options
dhcp-no-override

# Boot configuration for BIOS clients
# Provide filename and set siaddr (server IP) explicitly
# Some PXE stacks ignore option 66 and only look at siaddr
# Syntax: dhcp-boot=<filename>,<servername>,<server-ip>
dhcp-boot=tag:!ipxe,tag:!efi64,undionly.kpxe,,{{SERVER_IP}}

# Boot configuration for UEFI clients (smaller NBP to avoid PXE-E05)
# Provide filename and siaddr explicitly - CRITICAL: Third parameter sets next-server!
dhcp-boot=tag:!ipxe,tag:efi64,snponly.efi,,{{SERVER_IP}}

# CRITICAL: The third parameter in dhcp-boot sets next-server (siaddr)
# This is handled by the dhcp-boot lines above

# Boot configuration for iPXE clients (HTTP chain)
dhcp-boot=tag:ipxe,http://{{SERVER_IP}}/boot.ipxe

# PXE service announcements (required for some PXE ROMs in proxy mode)
# Use architecture constants supported by dnsmasq - FORCE our server
pxe-service=X86-64_EFI,"PXE UEFI x86-64 (iPXE)",snponly.efi,{{SERVER_IP}}
pxe-service=X86PC,"PXE BIOS (iPXE)",undionly.kpxe,{{SERVER_IP}}

# Additional PXE options handled by dhcp-boot and pxe-service above

# Optional domain name configuration
{{DOMAIN_CONFIG}}

# Optional broadcast address configuration
{{BROADCAST_CONFIG}}

# Debug logging configuration
{{DEBUG_CONFIG}}
